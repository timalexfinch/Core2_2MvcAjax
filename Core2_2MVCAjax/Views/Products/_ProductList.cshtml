@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model IEnumerable<AdventureWorksCore2_2.Models.Product>


<table class="table table-hover table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductCategory)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductModel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Color)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductCategory.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductModel.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Color)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@*@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))*@
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }), Bootstrap4PagedListRenderOptions.ClassicPlusFirstAndLast)